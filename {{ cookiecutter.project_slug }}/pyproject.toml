[tool.poetry]
name = "{{ cookiecutter.project_slug }}"
version = "{{ cookiecutter.version }}"
description = "{{ cookiecutter.project_short_description }}"
authors = ["{{cookiecutter.full_name }} <{{ cookiecutter.email }}>"]
license = "{{ cookiecutter.license }}"
readme = "README.md"
homepage = "https://github.com/{{cookiecutter.github_username}}/{{cookiecutter.project_slug}}"
repository = "https://github.com/{{cookiecutter.github_username}}/{{cookiecutter.project_slug}}"
documentation = "https://{{ cookiecutter.project_slug }}.readthedocs.io"
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: Implementation :: PyPy"
]

[tool.poetry.dependencies]
python = "^3.9"

# documentation
[tool.poetry.group.docs.dependencies]
# Packages in this group won't be installed by pip,
# but are installed by poetry by default.
# So they are available in your dev environment,
# but not in a production environment.
myst-nb = "^0.16.0"
myst-parser = "^0.18.0"
Sphinx = "^4.5.0"
sphinx-autobuild = "^2021.3.14"
sphinx-panels = "^0.6.0"
sphinx-rtd-theme = "^1.0.0"
sphinxcontrib-mermaid = "^0.7.1"

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.0"
pytest = "^7.1"
pytest-cov = "^4.0.0"
tox = "^4.0.0"

[tool.ruff]
select = [
#    "A",  # flake8-builtins
    "E",  # Flake8
    "F",  # Flake8
    "I",  # isort
    "D",  # pydocstyle
    "RUF",  # ruff specific rules
]
ignore = [
    "D100",  # Missing docstring in public module
    "D104",  # Missing docstring in public package
    "D106",  # Missing docstring in public nested class
    "E501",  # LineTooLong
]
target-version = "py39"

[tool.ruff.per-file-ignores]
"__init__.py" = [
    "F401",  # UnusedImport
]


[build-system]
requires = ["poetry-core>=1.1"]
build-backend = "poetry.core.masonry.api"
